<map id="MemberGroupInfoContext::Private::Cachable" name="MemberGroupInfoContext::Private::Cachable">
<area shape="rect" id="node2" href="$classSharedPtr.html" title="{SharedPtr\&lt; MemberGroupList\lContext \&gt;\n||+ SharedPtr()\l+ ~SharedPtr()\l+ operator*()\l+ operator&#45;\&gt;()\l+ get()\l+ operator bool()\l+ reset()\l&#45; SharedPtr()\l&#45; operator=()\l&#45; operator==()\l&#45; operator!=()\l}" alt="" coords="101,2131,296,2369"/>
<area shape="rect" id="node3" href="$classMemberGroupListContext.html" title="{MemberGroupListContext\n||+ count()\l+ at()\l+ createIterator()\l+ addRef()\l+ release()\l+ alloc()\l+ alloc()\l+ alloc()\l&#45; MemberGroupListContext()\l&#45; MemberGroupListContext()\l&#45; MemberGroupListContext()\l&#45; ~MemberGroupListContext()\l}" alt="" coords="89,1807,284,2046"/>
<area shape="rect" id="node4" href="$classRefCountedContext.html" title="Helper class to support reference counting. " alt="" coords="240,1550,407,1671"/>
<area shape="rect" id="node24" href="$classMemberListContext.html" title="{MemberListContext\n||+ count()\l+ at()\l+ createIterator()\l+ addRef()\l+ release()\l+ alloc()\l+ alloc()\l+ alloc()\l&#45; MemberListContext()\l&#45; MemberListContext()\l&#45; MemberListContext()\l&#45; ~MemberListContext()\l}" alt="" coords="405,1807,565,2046"/>
<area shape="rect" id="node5" href="$classTemplateListIntf.html" title="Abstract read&#45;only interface for a context value of type list. " alt="" coords="541,918,685,1069"/>
<area shape="rect" id="node7" href="$classGenericNodeListContext.html" title="standard template list implementation " alt="" coords="364,1227,550,1421"/>
<area shape="rect" id="node13" href="$classTemplateVariant.html" title="Variant type which can hold one value of a fixed set of types. " alt="" coords="712,1785,850,2068"/>
<area shape="rect" id="node6" href="$classMemberGroupListContext_1_1Private.html" title="{MemberGroupListContext\l::Private\n||+ addMemberGroup()\l}" alt="" coords="45,1565,216,1657"/>
<area shape="rect" id="node25" href="$classMemberListContext_1_1Private.html" title="{MemberListContext::\lPrivate\n||+ addMember()\l}" alt="" coords="432,1565,576,1657"/>
<area shape="rect" id="node8" href="$classQList.html" title="{QList\&lt; TemplateVariant \&gt;\n||+ QList()\l+ QList()\l+ ~QList()\l+ operator=()\l+ operator==()\l+ count()\l+ isEmpty()\l+ insert()\l+ inSort()\l+ prepend()\land 17 more...\l&#45; compareValues()\l&#45; newValue()\l&#45; deleteValue()\l&#45; newItem()\l&#45; deleteItem()\l&#45; compareItems()\l}" alt="" coords="344,837,516,1149"/>
<area shape="rect" id="node9" href="$classQGList.html" title="The QGList class is an internal class for implementing Qt collection classes. " alt="" coords="353,433,508,775"/>
<area shape="rect" id="node10" href="$classQCollection.html" title="The QCollection class is the base class of all Qt collections. " alt="" coords="536,147,661,341"/>
<area shape="rect" id="node11" href="$classQLNode.html" title="The QLNode class is an internal class for the QList template collection. " alt="" coords="366,198,454,290"/>
<area shape="rect" id="node12" href="$classScopedPtr.html" title="{ScopedPtr\&lt; TemplateVariant \&gt;\n||+ ScopedPtr()\l+ ~ScopedPtr()\l+ operator*()\l+ operator&#45;\&gt;()\l+ get()\l+ operator bool()\l+ reset()\l&#45; ScopedPtr()\l&#45; operator=()\l&#45; operator==()\l&#45; operator!=()\l}" alt="" coords="565,2138,768,2362"/>
<area shape="rect" id="node22" href="$classTemplateVariant_1_1Delegate.html" title="Helper class to create a delegate that can store a function/method call. " alt="" coords="792,2182,970,2318"/>
<area shape="rect" id="node14" href="$classQCString.html" title="This is an alternative implementation of QCString. " alt="" coords="885,1499,992,1723"/>
<area shape="rect" id="node15" href="$classQCString_1_1StringRep.html" title="{QCString::StringRep\n||+ StringRep()\l+ initEmpty()\l+ ~StringRep()\l+ StringRep()\l+ StringRep()\l+ StringRep()\l+ StringRep()\l+ operator=()\l+ operator=()\l+ isEmpty()\land 6 more...\l}" alt="" coords="867,1212,1010,1436"/>
<area shape="rect" id="node16" href="$unionQCString_1_1StringRep_1_1ShortOrLongStringSelector.html" title="{QCString::StringRep\l::ShortOrLongStringSelector\n||}" alt="" coords="846,947,1031,1039"/>
<area shape="rect" id="node17" href="$structQCString_1_1ShortStringRep.html" title="{QCString::ShortStringRep\n|+ isShort\l+ len\l+ str\l|}" alt="" coords="916,551,1089,657"/>
<area shape="rect" id="node18" href="$structQCString_1_1LongStringRep.html" title="{QCString::LongStringRep\n|+ isShort\l|}" alt="" coords="721,565,892,643"/>
<area shape="rect" id="node19" href="$structQCString_1_1LSData.html" title="{QCString::LSData\n||+ toStr()\l+ dispose()\l+ create()\l+ resize()\l}" alt="" coords="742,183,870,305"/>
<area shape="rect" id="node20" href="$structQCString_1_1LSHeader.html" title="{QCString::LSHeader\n|+ len\l+ refCount\l|}" alt="" coords="735,5,878,97"/>
<area shape="rect" id="node21" href="$classTemplateStructIntf.html" title="Abstract interface for a context value of type struct. " alt="" coords="702,1550,860,1671"/>
<area shape="rect" id="node23" href="$classSharedPtr.html" title="{SharedPtr\&lt; MemberListContext \&gt;\n||+ SharedPtr()\l+ ~SharedPtr()\l+ operator*()\l+ operator&#45;\&gt;()\l+ get()\l+ operator bool()\l+ reset()\l&#45; SharedPtr()\l&#45; operator=()\l&#45; operator==()\l&#45; operator!=()\l}" alt="" coords="322,2138,541,2362"/>
</map>
